import streamlit as st
from ragmini import read_docs, build_corpus, build_tfidf_index, search, get_chat_provider

st.set_page_config(page_title='Mini‚ÄëRAG (FAQ + —Ü–∏—Ç–∞—Ç—ã)', page_icon='üìö', layout='wide')
st.title('Mini‚ÄëRAG (FAQ + —Ü–∏—Ç–∞—Ç—ã)')

docs = read_docs('samples/faq')
corpus, meta = build_corpus(docs)
vect, mat = build_tfidf_index(corpus)

col1, col2 = st.columns([1,1])
with col1:
    q = st.text_input('–í–æ–ø—Ä–æ—Å', '–ö–∞–∫ –ø–µ—Ä–µ–≤—ã–ø—É—Å—Ç–∏—Ç—å –∫–∞—Ä—Ç—É –∏ —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ —Å—Ç–æ–∏—Ç?')
with col2:
    topk = st.slider('Top‚Äëk –ø–∞—Å—Å–∞–∂–µ–π', 3, 10, 5)

use_llm = st.toggle('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å LLM –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞', value=False, help='–ï—Å–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ ‚Äî –æ—Ç–≤–µ—Ç —Å—Ç—Ä–æ–∏—Ç—Å—è –∏–∑ –ª—É—á—à–∏—Ö –ø–∞—Å—Å–∞–∂–µ–π.')

if st.button('–ò—Å–∫–∞—Ç—å'):
    hits = search(q, vect, mat, corpus, meta, k=topk)

    st.subheader('–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Å—Å–∞–∂–∏')
    for h in hits:
        st.write(f"**{h['title']}** ‚Äî {h['url']}  \n_—Ä–µ–π—Ç–∏–Ω–≥: {h['score']:.3f}_")
        st.write(h['passage'])
        st.markdown('---')

    st.subheader('–û—Ç–≤–µ—Ç')
    if not use_llm:
        answer = hits[0]['passage'] if hits else '–ù–µ –Ω–∞–π–¥–µ–Ω–æ.'
        citations = [h['url'] for h in hits[:3]]
        st.write(answer)
        st.caption('–¶–∏—Ç–∞—Ç—ã: ' + ' ¬∑ '.join(citations))
    else:
        provider = get_chat_provider()
        context = '\n\n'.join([f"[{i+1}] {h['passage']} (src: {h['url']})" for i,h in enumerate(hits[:topk])])
        messages = [
            {"role":"system","content":"–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–∞–Ω–∫–∞. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Å—ã–ª–∞–π—Å—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ [–Ω–æ–º–µ—Ä] –≤ –∫–æ–Ω—Ü–µ —Ñ—Ä–∞–∑—ã."},
            {"role":"user","content": f"–í–æ–ø—Ä–æ—Å: {q}\n\n–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n{context}\n\n–û—Ç–≤–µ—Ç—å –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç ‚Äî —Å–∫–∞–∂–∏, —á—Ç–æ –Ω–µ –Ω–∞—à—ë–ª—Å—è –æ—Ç–≤–µ—Ç."}
        ]
        try:
            ans = provider.chat(messages, temperature=0.0, max_tokens=400)
            st.write(ans)
        except Exception as e:
            st.error(f'LLM error: {e}')
